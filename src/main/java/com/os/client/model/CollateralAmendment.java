/*
 * 1Source Ledger API
 * 1Source Ledger API provides client access to the 1Source Ledger. You can find out more about 1Source at [https://equilend.com](https://equilend.com).  This specification is work in progress. The design is meant to model the securities lending life cycle in as clean a way as possible while being robust enough to easily translate to ISLA CDM workflows and data model.  API specification is the intellectual property of EquiLend LLC and should not be copied or disseminated in any way. 
 *
 * OpenAPI spec version: 1.2.2
 * Contact: 1source_help@equilend.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.os.client.model;

import java.io.Serializable;
import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * CollateralAmendment
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-07-29T19:02:50.865809907Z[GMT]")

public class CollateralAmendment implements Serializable{
  private static final long serialVersionUID = 1L;
  @SerializedName("collateralCurrency")
  private CurrencyCd collateralCurrency = null;

  @SerializedName("collateralType")
  private CollateralType collateralType = null;

  @SerializedName("collateralDescriptionCode")
  private CollateralDescription collateralDescriptionCode = null;

  @SerializedName("collateralMargin")
  private Double collateralMargin = null;

  @SerializedName("roundingRule")
  private Integer roundingRule = null;

  @SerializedName("roundingMode")
  private RoundingMode roundingMode = null;

  @SerializedName("minimumMarkPrice")
  private Double minimumMarkPrice = null;

  public CollateralAmendment collateralCurrency(CurrencyCd collateralCurrency) {
    this.collateralCurrency = collateralCurrency;
    return this;
  }

   /**
   * Get collateralCurrency
   * @return collateralCurrency
  **/
  @Schema(description = "")
  public CurrencyCd getCollateralCurrency() {
    return collateralCurrency;
  }

  public void setCollateralCurrency(CurrencyCd collateralCurrency) {
    this.collateralCurrency = collateralCurrency;
  }

  public CollateralAmendment collateralType(CollateralType collateralType) {
    this.collateralType = collateralType;
    return this;
  }

   /**
   * Get collateralType
   * @return collateralType
  **/
  @Schema(description = "")
  public CollateralType getCollateralType() {
    return collateralType;
  }

  public void setCollateralType(CollateralType collateralType) {
    this.collateralType = collateralType;
  }

  public CollateralAmendment collateralDescriptionCode(CollateralDescription collateralDescriptionCode) {
    this.collateralDescriptionCode = collateralDescriptionCode;
    return this;
  }

   /**
   * Get collateralDescriptionCode
   * @return collateralDescriptionCode
  **/
  @Schema(description = "")
  public CollateralDescription getCollateralDescriptionCode() {
    return collateralDescriptionCode;
  }

  public void setCollateralDescriptionCode(CollateralDescription collateralDescriptionCode) {
    this.collateralDescriptionCode = collateralDescriptionCode;
  }

  public CollateralAmendment collateralMargin(Double collateralMargin) {
    this.collateralMargin = collateralMargin;
    return this;
  }

   /**
   * Get collateralMargin
   * @return collateralMargin
  **/
  @Schema(description = "")
  public Double getCollateralMargin() {
    return collateralMargin;
  }

  public void setCollateralMargin(Double collateralMargin) {
    this.collateralMargin = collateralMargin;
  }

  public CollateralAmendment roundingRule(Integer roundingRule) {
    this.roundingRule = roundingRule;
    return this;
  }

   /**
   * Get roundingRule
   * @return roundingRule
  **/
  @Schema(description = "")
  public Integer getRoundingRule() {
    return roundingRule;
  }

  public void setRoundingRule(Integer roundingRule) {
    this.roundingRule = roundingRule;
  }

  public CollateralAmendment roundingMode(RoundingMode roundingMode) {
    this.roundingMode = roundingMode;
    return this;
  }

   /**
   * Get roundingMode
   * @return roundingMode
  **/
  @Schema(description = "")
  public RoundingMode getRoundingMode() {
    return roundingMode;
  }

  public void setRoundingMode(RoundingMode roundingMode) {
    this.roundingMode = roundingMode;
  }

  public CollateralAmendment minimumMarkPrice(Double minimumMarkPrice) {
    this.minimumMarkPrice = minimumMarkPrice;
    return this;
  }

   /**
   * Get minimumMarkPrice
   * @return minimumMarkPrice
  **/
  @Schema(description = "")
  public Double getMinimumMarkPrice() {
    return minimumMarkPrice;
  }

  public void setMinimumMarkPrice(Double minimumMarkPrice) {
    this.minimumMarkPrice = minimumMarkPrice;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CollateralAmendment collateralAmendment = (CollateralAmendment) o;
    return Objects.equals(this.collateralCurrency, collateralAmendment.collateralCurrency) &&
        Objects.equals(this.collateralType, collateralAmendment.collateralType) &&
        Objects.equals(this.collateralDescriptionCode, collateralAmendment.collateralDescriptionCode) &&
        Objects.equals(this.collateralMargin, collateralAmendment.collateralMargin) &&
        Objects.equals(this.roundingRule, collateralAmendment.roundingRule) &&
        Objects.equals(this.roundingMode, collateralAmendment.roundingMode) &&
        Objects.equals(this.minimumMarkPrice, collateralAmendment.minimumMarkPrice);
  }

  @Override
  public int hashCode() {
    return Objects.hash(collateralCurrency, collateralType, collateralDescriptionCode, collateralMargin, roundingRule, roundingMode, minimumMarkPrice);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CollateralAmendment {\n");
    
    sb.append("    collateralCurrency: ").append(toIndentedString(collateralCurrency)).append("\n");
    sb.append("    collateralType: ").append(toIndentedString(collateralType)).append("\n");
    sb.append("    collateralDescriptionCode: ").append(toIndentedString(collateralDescriptionCode)).append("\n");
    sb.append("    collateralMargin: ").append(toIndentedString(collateralMargin)).append("\n");
    sb.append("    roundingRule: ").append(toIndentedString(roundingRule)).append("\n");
    sb.append("    roundingMode: ").append(toIndentedString(roundingMode)).append("\n");
    sb.append("    minimumMarkPrice: ").append(toIndentedString(minimumMarkPrice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
