/*
 * 1Source Ledger API
 * 1Source Ledger API provides client access to the 1Source Ledger. You can find out more about 1Source at [https://equilend.com](https://equilend.com).  This specification is work in progress. The design is meant to model the securities lending life cycle in as clean a way as possible while being robust enough to easily translate to ISLA CDM workflows and data model.  API specification is the intellectual property of EquiLend LLC and should not be copied or disseminated in any way. 
 *
 * OpenAPI spec version: 1.1.0
 * Contact: 1source_help@equilend.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.os.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.os.client.model.Party;
import com.os.client.model.VenueType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.io.Serializable;
/**
 * A third-party service that generates loans, returns, recalls, rerates
 */
@Schema(description = "A third-party service that generates loans, returns, recalls, rerates")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-11-05T14:31:33.159170711Z[GMT]")

public class Venue implements Serializable{
  private static final long serialVersionUID = 1L;
  @SerializedName("party")
  private Party party = null;

  @SerializedName("type")
  private VenueType type = null;

  @SerializedName("venueRefKey")
  private String venueRefKey = null;

  @SerializedName("transactionDatetime")
  private OffsetDateTime transactionDatetime = null;

  public Venue party(Party party) {
    this.party = party;
    return this;
  }

   /**
   * Get party
   * @return party
  **/
  @Schema(description = "")
  public Party getParty() {
    return party;
  }

  public void setParty(Party party) {
    this.party = party;
  }

  public Venue type(VenueType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(required = true, description = "")
  public VenueType getType() {
    return type;
  }

  public void setType(VenueType type) {
    this.type = type;
  }

  public Venue venueRefKey(String venueRefKey) {
    this.venueRefKey = venueRefKey;
    return this;
  }

   /**
   * Get venueRefKey
   * @return venueRefKey
  **/
  @Schema(description = "")
  public String getVenueRefKey() {
    return venueRefKey;
  }

  public void setVenueRefKey(String venueRefKey) {
    this.venueRefKey = venueRefKey;
  }

  public Venue transactionDatetime(OffsetDateTime transactionDatetime) {
    this.transactionDatetime = transactionDatetime;
    return this;
  }

   /**
   * Get transactionDatetime
   * @return transactionDatetime
  **/
  @Schema(description = "")
  public OffsetDateTime getTransactionDatetime() {
    return transactionDatetime;
  }

  public void setTransactionDatetime(OffsetDateTime transactionDatetime) {
    this.transactionDatetime = transactionDatetime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Venue venue = (Venue) o;
    return Objects.equals(this.party, venue.party) &&
        Objects.equals(this.type, venue.type) &&
        Objects.equals(this.venueRefKey, venue.venueRefKey) &&
        Objects.equals(this.transactionDatetime, venue.transactionDatetime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(party, type, venueRefKey, transactionDatetime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Venue {\n");
    
    sb.append("    party: ").append(toIndentedString(party)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    venueRefKey: ").append(toIndentedString(venueRefKey)).append("\n");
    sb.append("    transactionDatetime: ").append(toIndentedString(transactionDatetime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
