/*
 * 1Source Ledger API
 * 1Source Ledger API provides client access to the 1Source Ledger. You can find out more about 1Source at [https://equilend.com](https://equilend.com).  This specification is work in progress. The design is meant to model the securities lending life cycle in as clean a way as possible while being robust enough to easily translate to ISLA CDM workflows and data model.  API specification is the intellectual property of EquiLend LLC and should not be copied or disseminated in any way. 
 *
 * OpenAPI spec version: 1.2.2
 * Contact: 1source_help@equilend.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.os.client.model;

import java.io.Serializable;
import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * PartySettlementInstructionUpdate
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-09-03T18:57:41.153687871Z[GMT]")

public class PartySettlementInstructionUpdate implements Serializable{
  private static final long serialVersionUID = 1L;
  @SerializedName("partyRole")
  private PartyRole partyRole = null;

  @SerializedName("internalAccountCode")
  private String internalAccountCode = null;

  @SerializedName("instruction")
  private SettlementInstruction instruction = null;

  public PartySettlementInstructionUpdate partyRole(PartyRole partyRole) {
    this.partyRole = partyRole;
    return this;
  }

   /**
   * Get partyRole
   * @return partyRole
  **/
  @Schema(required = true, description = "")
  public PartyRole getPartyRole() {
    return partyRole;
  }

  public void setPartyRole(PartyRole partyRole) {
    this.partyRole = partyRole;
  }

  public PartySettlementInstructionUpdate internalAccountCode(String internalAccountCode) {
    this.internalAccountCode = internalAccountCode;
    return this;
  }

   /**
   * Get internalAccountCode
   * @return internalAccountCode
  **/
  @Schema(required = true, description = "")
  public String getInternalAccountCode() {
    return internalAccountCode;
  }

  public void setInternalAccountCode(String internalAccountCode) {
    this.internalAccountCode = internalAccountCode;
  }

  public PartySettlementInstructionUpdate instruction(SettlementInstruction instruction) {
    this.instruction = instruction;
    return this;
  }

   /**
   * Get instruction
   * @return instruction
  **/
  @Schema(required = true, description = "")
  public SettlementInstruction getInstruction() {
    return instruction;
  }

  public void setInstruction(SettlementInstruction instruction) {
    this.instruction = instruction;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PartySettlementInstructionUpdate partySettlementInstructionUpdate = (PartySettlementInstructionUpdate) o;
    return Objects.equals(this.partyRole, partySettlementInstructionUpdate.partyRole) &&
        Objects.equals(this.internalAccountCode, partySettlementInstructionUpdate.internalAccountCode) &&
        Objects.equals(this.instruction, partySettlementInstructionUpdate.instruction);
  }

  @Override
  public int hashCode() {
    return Objects.hash(partyRole, internalAccountCode, instruction);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PartySettlementInstructionUpdate {\n");
    
    sb.append("    partyRole: ").append(toIndentedString(partyRole)).append("\n");
    sb.append("    internalAccountCode: ").append(toIndentedString(internalAccountCode)).append("\n");
    sb.append("    instruction: ").append(toIndentedString(instruction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
